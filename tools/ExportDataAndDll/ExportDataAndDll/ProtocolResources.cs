// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolResources.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Base {

  /// <summary>Holder for reflection information generated from ProtocolResources.proto</summary>
  public static partial class ProtocolResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtocolResources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b2NvbFJlc291cmNlcy5wcm90bxIEQmFzZSJqCgxSZXNvdXJjZURh",
            "dGESDAoEcGF0aBgBIAEoCRIgCgR0eXBlGAIgASgOMhIuQmFzZS5SZXNvdXJj",
            "ZVR5cGUSCwoDY3JjGAMgASgNEgwKBHNpemUYBCABKAUSDwoHZGVwZW5kcxgF",
            "IAMoCSKMAQoNUmVzb3VyY2VEYXRhcxI1CglyZXNvdXJjZXMYASADKAsyIi5C",
            "YXNlLlJlc291cmNlRGF0YXMuUmVzb3VyY2VzRW50cnkaRAoOUmVzb3VyY2Vz",
            "RW50cnkSCwoDa2V5GAEgASgJEiEKBXZhbHVlGAIgASgLMhIuQmFzZS5SZXNv",
            "dXJjZURhdGE6AjgBKkQKDFJlc291cmNlVHlwZRIKCgZOb3JtYWwQABILCgdJ",
            "bnN0YWxsEAESDAoIT3B0aW9uYWwQAhINCglVbnBhY2thZ2UQBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Base.ResourceType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Base.ResourceData), global::Base.ResourceData.Parser, new[]{ "Path", "Type", "Crc", "Size", "Depends" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Base.ResourceDatas), global::Base.ResourceDatas.Parser, new[]{ "Resources" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResourceType {
    [pbr::OriginalName("Normal")] Normal = 0,
    [pbr::OriginalName("Install")] Install = 1,
    [pbr::OriginalName("Optional")] Optional = 2,
    [pbr::OriginalName("Unpackage")] Unpackage = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ResourceData : pb::IMessage<ResourceData> {
    private static readonly pb::MessageParser<ResourceData> _parser = new pb::MessageParser<ResourceData>(() => new ResourceData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Base.ProtocolResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceData(ResourceData other) : this() {
      path_ = other.path_;
      type_ = other.type_;
      crc_ = other.crc_;
      size_ = other.size_;
      depends_ = other.depends_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceData Clone() {
      return new ResourceData(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Base.ResourceType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Base.ResourceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "crc" field.</summary>
    public const int CrcFieldNumber = 3;
    private uint crc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Crc {
      get { return crc_; }
      set {
        crc_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "depends" field.</summary>
    public const int DependsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_depends_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> depends_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Depends {
      get { return depends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Type != other.Type) return false;
      if (Crc != other.Crc) return false;
      if (Size != other.Size) return false;
      if(!depends_.Equals(other.depends_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Crc != 0) hash ^= Crc.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      hash ^= depends_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Crc != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Crc);
      }
      if (Size != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Size);
      }
      depends_.WriteTo(output, _repeated_depends_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Crc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Crc);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      size += depends_.CalculateSize(_repeated_depends_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceData other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Crc != 0) {
        Crc = other.Crc;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      depends_.Add(other.depends_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::Base.ResourceType) input.ReadEnum();
            break;
          }
          case 24: {
            Crc = input.ReadUInt32();
            break;
          }
          case 32: {
            Size = input.ReadInt32();
            break;
          }
          case 42: {
            depends_.AddEntriesFrom(input, _repeated_depends_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceDatas : pb::IMessage<ResourceDatas> {
    private static readonly pb::MessageParser<ResourceDatas> _parser = new pb::MessageParser<ResourceDatas>(() => new ResourceDatas());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceDatas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Base.ProtocolResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDatas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDatas(ResourceDatas other) : this() {
      resources_ = other.resources_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDatas Clone() {
      return new ResourceDatas(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Base.ResourceData>.Codec _map_resources_codec
        = new pbc::MapField<string, global::Base.ResourceData>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Base.ResourceData.Parser), 10);
    private readonly pbc::MapField<string, global::Base.ResourceData> resources_ = new pbc::MapField<string, global::Base.ResourceData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Base.ResourceData> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceDatas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceDatas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Resources.Equals(other.Resources)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Resources.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _map_resources_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_map_resources_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceDatas other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _map_resources_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

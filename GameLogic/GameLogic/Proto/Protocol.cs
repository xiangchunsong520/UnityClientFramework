// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CW {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxICQ1ciRQoMUGFja2V0SGVhZGVyEhkKA2lkMRgB",
            "IAEoDjIMLkNXLlBhY2tldElEEhoKA2lkMhgCIAEoDjINLkNXLlBhY2tldElE",
            "MioeCghQYWNrZXRJRBISCg5MT0dJTl9QUk9UT0NPTBAAKisKCVBhY2tldElE",
            "MhINCglMT0dJTl9LRVkQABIPCgtMT0dJTl9MT0dJThADKvgBCg5yZXRfZXJy",
            "b3JfY29kZRIOCgpFUlJPUl9OT05FEAASHgoaRVJST1JfTE9HSU5fV1JPTkdf",
            "VVNFUk5BTUUQARIdChlFUlJPUl9MT0dJTl9BTFJFQURZX0xPR0lOEAISHQoZ",
            "RVJST1JfTE9HSU5fV1JPTkdfVkVSU0lPThADEhUKEUVSUk9SX0xPR0lOX0JB",
            "TklEEAQSFQoRRVJST1JfTE9HSU5fQkFOSVAQBRIZChVFUlJPUl9MT0dJTl9O",
            "T19TRVJWRVIQBhIcChhFUlJPUl9MT0dJTl9OT1RfSklOR1lJTkcQBxIRCgxF",
            "UlJPUl9VTktOT1cQ0A9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CW.PacketID), typeof(global::CW.PacketID2), typeof(global::CW.ret_error_code), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CW.PacketHeader), global::CW.PacketHeader.Parser, new[]{ "Id1", "Id2" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PacketID {
    /// <summary>
    /// -------------------------客户端消息大类型--------------------------------
    /// </summary>
    [pbr::OriginalName("LOGIN_PROTOCOL")] LoginProtocol = 0,
  }

  public enum PacketID2 {
    /// <summary>
    /// -------------------------消息小类型--------------------------------
    /// gw处理的消息
    /// </summary>
    [pbr::OriginalName("LOGIN_KEY")] LoginKey = 0,
    /// <summary>
    /// 登陆        
    /// </summary>
    [pbr::OriginalName("LOGIN_LOGIN")] LoginLogin = 3,
  }

  public enum ret_error_code {
    /// <summary>
    /// 成功
    /// </summary>
    [pbr::OriginalName("ERROR_NONE")] ErrorNone = 0,
    /// <summary>
    /// 用户名密码错                
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_WRONG_USERNAME")] ErrorLoginWrongUsername = 1,
    /// <summary>
    /// 已登陆，踢掉了前任          
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_ALREADY_LOGIN")] ErrorLoginAlreadyLogin = 2,
    /// <summary>
    /// 版本号错误                  
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_WRONG_VERSION")] ErrorLoginWrongVersion = 3,
    /// <summary>
    /// 封停账号                    
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_BANID")] ErrorLoginBanid = 4,
    /// <summary>
    /// 封停IP                      
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_BANIP")] ErrorLoginBanip = 5,
    /// <summary>
    /// 服务器维护中，请稍后     
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_NO_SERVER")] ErrorLoginNoServer = 6,
    /// <summary>
    /// 不是经营测试服玩家 
    /// </summary>
    [pbr::OriginalName("ERROR_LOGIN_NOT_JINGYING")] ErrorLoginNotJingying = 7,
    /// <summary>
    /// 其他错误	
    /// </summary>
    [pbr::OriginalName("ERROR_UNKNOW")] ErrorUnknow = 2000,
  }

  #endregion

  #region Messages
  public sealed partial class PacketHeader : pb::IMessage<PacketHeader> {
    private static readonly pb::MessageParser<PacketHeader> _parser = new pb::MessageParser<PacketHeader>(() => new PacketHeader());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CW.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketHeader(PacketHeader other) : this() {
      id1_ = other.id1_;
      id2_ = other.id2_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketHeader Clone() {
      return new PacketHeader(this);
    }

    /// <summary>Field number for the "id1" field.</summary>
    public const int Id1FieldNumber = 1;
    private global::CW.PacketID id1_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CW.PacketID Id1 {
      get { return id1_; }
      set {
        id1_ = value;
      }
    }

    /// <summary>Field number for the "id2" field.</summary>
    public const int Id2FieldNumber = 2;
    private global::CW.PacketID2 id2_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CW.PacketID2 Id2 {
      get { return id2_; }
      set {
        id2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id1 != other.Id1) return false;
      if (Id2 != other.Id2) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id1 != 0) hash ^= Id1.GetHashCode();
      if (Id2 != 0) hash ^= Id2.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id1 != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id1);
      }
      if (Id2 != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Id2);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id1);
      }
      if (Id2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id2);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketHeader other) {
      if (other == null) {
        return;
      }
      if (other.Id1 != 0) {
        Id1 = other.Id1;
      }
      if (other.Id2 != 0) {
        Id2 = other.Id2;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            id1_ = (global::CW.PacketID) input.ReadEnum();
            break;
          }
          case 16: {
            id2_ = (global::CW.PacketID2) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolBuildProjectSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BuildBase {

  /// <summary>Holder for reflection information generated from ProtocolBuildProjectSettings.proto</summary>
  public static partial class ProtocolBuildProjectSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtocolBuildProjectSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolBuildProjectSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJQcm90b2NvbEJ1aWxkUHJvamVjdFNldHRpbmdzLnByb3RvEglCdWlsZEJh",
            "c2UifwoMQnVpbGRDaGFubmVsEg4KBmFjdGl2ZRgBIAEoCBITCgtjaGFubmVs",
            "TmFtZRgCIAEoCRITCgtwbHVnaW5zUGF0aBgDIAEoCRIQCghidWlsZEFsbBgE",
            "IAEoCBIRCglidWlsZE1pbmkYBSABKAgSEAoIc2VsZWN0SXAYBiABKAgicwoK",
            "QnVpbGRHcm91cBIOCgZhY3RpdmUYASABKAgSKgoIcGxhdGZvcm0YAiABKA4y",
            "GC5CdWlsZEJhc2UuQnVpbGRQbGF0Zm9ybRIpCghjaGFubmVscxgDIAMoCzIX",
            "LkJ1aWxkQmFzZS5CdWlsZENoYW5uZWwiaQoNQnVpbGRTZXR0aW5ncxIWCg5l",
            "eHBvcnRSZXNvdXJjZRgBIAEoCBIUCgxidWlsZFByb2plY3QYAiABKAgSKgoL",
            "YnVpbGRHcm91cHMYAyADKAsyFS5CdWlsZEJhc2UuQnVpbGRHcm91cCoyCg1C",
            "dWlsZFBsYXRmb3JtEgsKB0FuZHJvaWQQABIHCgNJT1MQARILCgdXaW5kb3dz",
            "EAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BuildBase.BuildPlatform), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BuildBase.BuildChannel), global::BuildBase.BuildChannel.Parser, new[]{ "Active", "ChannelName", "PluginsPath", "BuildAll", "BuildMini", "SelectIp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BuildBase.BuildGroup), global::BuildBase.BuildGroup.Parser, new[]{ "Active", "Platform", "Channels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BuildBase.BuildSettings), global::BuildBase.BuildSettings.Parser, new[]{ "ExportResource", "BuildProject", "BuildGroups" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BuildPlatform {
    [pbr::OriginalName("Android")] Android = 0,
    [pbr::OriginalName("IOS")] Ios = 1,
    [pbr::OriginalName("Windows")] Windows = 2,
  }

  #endregion

  #region Messages
  public sealed partial class BuildChannel : pb::IMessage<BuildChannel> {
    private static readonly pb::MessageParser<BuildChannel> _parser = new pb::MessageParser<BuildChannel>(() => new BuildChannel());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildChannel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuildBase.ProtocolBuildProjectSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildChannel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildChannel(BuildChannel other) : this() {
      active_ = other.active_;
      channelName_ = other.channelName_;
      pluginsPath_ = other.pluginsPath_;
      buildAll_ = other.buildAll_;
      buildMini_ = other.buildMini_;
      selectIp_ = other.selectIp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildChannel Clone() {
      return new BuildChannel(this);
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 1;
    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "channelName" field.</summary>
    public const int ChannelNameFieldNumber = 2;
    private string channelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelName {
      get { return channelName_; }
      set {
        channelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pluginsPath" field.</summary>
    public const int PluginsPathFieldNumber = 3;
    private string pluginsPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PluginsPath {
      get { return pluginsPath_; }
      set {
        pluginsPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildAll" field.</summary>
    public const int BuildAllFieldNumber = 4;
    private bool buildAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BuildAll {
      get { return buildAll_; }
      set {
        buildAll_ = value;
      }
    }

    /// <summary>Field number for the "buildMini" field.</summary>
    public const int BuildMiniFieldNumber = 5;
    private bool buildMini_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BuildMini {
      get { return buildMini_; }
      set {
        buildMini_ = value;
      }
    }

    /// <summary>Field number for the "selectIp" field.</summary>
    public const int SelectIpFieldNumber = 6;
    private bool selectIp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelectIp {
      get { return selectIp_; }
      set {
        selectIp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildChannel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildChannel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Active != other.Active) return false;
      if (ChannelName != other.ChannelName) return false;
      if (PluginsPath != other.PluginsPath) return false;
      if (BuildAll != other.BuildAll) return false;
      if (BuildMini != other.BuildMini) return false;
      if (SelectIp != other.SelectIp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Active != false) hash ^= Active.GetHashCode();
      if (ChannelName.Length != 0) hash ^= ChannelName.GetHashCode();
      if (PluginsPath.Length != 0) hash ^= PluginsPath.GetHashCode();
      if (BuildAll != false) hash ^= BuildAll.GetHashCode();
      if (BuildMini != false) hash ^= BuildMini.GetHashCode();
      if (SelectIp != false) hash ^= SelectIp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Active != false) {
        output.WriteRawTag(8);
        output.WriteBool(Active);
      }
      if (ChannelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChannelName);
      }
      if (PluginsPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PluginsPath);
      }
      if (BuildAll != false) {
        output.WriteRawTag(32);
        output.WriteBool(BuildAll);
      }
      if (BuildMini != false) {
        output.WriteRawTag(40);
        output.WriteBool(BuildMini);
      }
      if (SelectIp != false) {
        output.WriteRawTag(48);
        output.WriteBool(SelectIp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Active != false) {
        size += 1 + 1;
      }
      if (ChannelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelName);
      }
      if (PluginsPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginsPath);
      }
      if (BuildAll != false) {
        size += 1 + 1;
      }
      if (BuildMini != false) {
        size += 1 + 1;
      }
      if (SelectIp != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildChannel other) {
      if (other == null) {
        return;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.ChannelName.Length != 0) {
        ChannelName = other.ChannelName;
      }
      if (other.PluginsPath.Length != 0) {
        PluginsPath = other.PluginsPath;
      }
      if (other.BuildAll != false) {
        BuildAll = other.BuildAll;
      }
      if (other.BuildMini != false) {
        BuildMini = other.BuildMini;
      }
      if (other.SelectIp != false) {
        SelectIp = other.SelectIp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Active = input.ReadBool();
            break;
          }
          case 18: {
            ChannelName = input.ReadString();
            break;
          }
          case 26: {
            PluginsPath = input.ReadString();
            break;
          }
          case 32: {
            BuildAll = input.ReadBool();
            break;
          }
          case 40: {
            BuildMini = input.ReadBool();
            break;
          }
          case 48: {
            SelectIp = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuildGroup : pb::IMessage<BuildGroup> {
    private static readonly pb::MessageParser<BuildGroup> _parser = new pb::MessageParser<BuildGroup>(() => new BuildGroup());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuildBase.ProtocolBuildProjectSettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildGroup(BuildGroup other) : this() {
      active_ = other.active_;
      platform_ = other.platform_;
      channels_ = other.channels_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildGroup Clone() {
      return new BuildGroup(this);
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 1;
    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 2;
    private global::BuildBase.BuildPlatform platform_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuildBase.BuildPlatform Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "channels" field.</summary>
    public const int ChannelsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BuildBase.BuildChannel> _repeated_channels_codec
        = pb::FieldCodec.ForMessage(26, global::BuildBase.BuildChannel.Parser);
    private readonly pbc::RepeatedField<global::BuildBase.BuildChannel> channels_ = new pbc::RepeatedField<global::BuildBase.BuildChannel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BuildBase.BuildChannel> Channels {
      get { return channels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Active != other.Active) return false;
      if (Platform != other.Platform) return false;
      if(!channels_.Equals(other.channels_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Active != false) hash ^= Active.GetHashCode();
      if (Platform != 0) hash ^= Platform.GetHashCode();
      hash ^= channels_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Active != false) {
        output.WriteRawTag(8);
        output.WriteBool(Active);
      }
      if (Platform != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Platform);
      }
      channels_.WriteTo(output, _repeated_channels_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Active != false) {
        size += 1 + 1;
      }
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
      }
      size += channels_.CalculateSize(_repeated_channels_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildGroup other) {
      if (other == null) {
        return;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      channels_.Add(other.channels_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Active = input.ReadBool();
            break;
          }
          case 16: {
            platform_ = (global::BuildBase.BuildPlatform) input.ReadEnum();
            break;
          }
          case 26: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuildSettings : pb::IMessage<BuildSettings> {
    private static readonly pb::MessageParser<BuildSettings> _parser = new pb::MessageParser<BuildSettings>(() => new BuildSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuildBase.ProtocolBuildProjectSettingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSettings(BuildSettings other) : this() {
      exportResource_ = other.exportResource_;
      buildProject_ = other.buildProject_;
      buildGroups_ = other.buildGroups_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSettings Clone() {
      return new BuildSettings(this);
    }

    /// <summary>Field number for the "exportResource" field.</summary>
    public const int ExportResourceFieldNumber = 1;
    private bool exportResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExportResource {
      get { return exportResource_; }
      set {
        exportResource_ = value;
      }
    }

    /// <summary>Field number for the "buildProject" field.</summary>
    public const int BuildProjectFieldNumber = 2;
    private bool buildProject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BuildProject {
      get { return buildProject_; }
      set {
        buildProject_ = value;
      }
    }

    /// <summary>Field number for the "buildGroups" field.</summary>
    public const int BuildGroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BuildBase.BuildGroup> _repeated_buildGroups_codec
        = pb::FieldCodec.ForMessage(26, global::BuildBase.BuildGroup.Parser);
    private readonly pbc::RepeatedField<global::BuildBase.BuildGroup> buildGroups_ = new pbc::RepeatedField<global::BuildBase.BuildGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BuildBase.BuildGroup> BuildGroups {
      get { return buildGroups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExportResource != other.ExportResource) return false;
      if (BuildProject != other.BuildProject) return false;
      if(!buildGroups_.Equals(other.buildGroups_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExportResource != false) hash ^= ExportResource.GetHashCode();
      if (BuildProject != false) hash ^= BuildProject.GetHashCode();
      hash ^= buildGroups_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExportResource != false) {
        output.WriteRawTag(8);
        output.WriteBool(ExportResource);
      }
      if (BuildProject != false) {
        output.WriteRawTag(16);
        output.WriteBool(BuildProject);
      }
      buildGroups_.WriteTo(output, _repeated_buildGroups_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExportResource != false) {
        size += 1 + 1;
      }
      if (BuildProject != false) {
        size += 1 + 1;
      }
      size += buildGroups_.CalculateSize(_repeated_buildGroups_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildSettings other) {
      if (other == null) {
        return;
      }
      if (other.ExportResource != false) {
        ExportResource = other.ExportResource;
      }
      if (other.BuildProject != false) {
        BuildProject = other.BuildProject;
      }
      buildGroups_.Add(other.buildGroups_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ExportResource = input.ReadBool();
            break;
          }
          case 16: {
            BuildProject = input.ReadBool();
            break;
          }
          case 26: {
            buildGroups_.AddEntriesFrom(input, _repeated_buildGroups_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
